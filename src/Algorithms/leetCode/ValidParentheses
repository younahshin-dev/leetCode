package leetcode.algorithm;

import org.junit.Test;

import java.util.HashMap;
import java.util.Stack;

import static org.junit.Assert.assertEquals;

public class ValidParentheses {
    HashMap<Character, Character> map = new HashMap<Character, Character>();

    public ValidParentheses() {
        this.map.put(')', '(');
        this.map.put('}', '{');
        this.map.put(']', '[');
    }

    public boolean isValid(String s) {
        Stack<Character> st = new Stack<Character>();
        char ch;
        for (int i = 0; i < s.length(); i++) {
            ch = s.charAt(i);
            if (map.containsKey(ch)) {
                
                if (!st.isEmpty() && map.get(ch) == st.pop()) {

                } else {
                    return false;
                }
            } else {
                st.push(ch);
            }
        }
        return st.isEmpty();
    }
}
